//ejercicio12.h
#pragma once
class vector
{
private: float vec[100];
		 int n;
public:
	vector(int _n);
	~vector(void);
	void cargar(int n);
	int eliminardup(int n);
	void mostrar(int n, int c);
};

//ejercicio12.cpp
#include "StdAfx.h"
#include "vector.h"
#include "conio.h"
#include <iostream>
using namespace std;
vector::vector(int _n)
{vec[100]=0;
n=_n;
}
vector::~vector(void)
{
}
void vector::cargar(int n)
{for (int a=0;a<n;a++)
{cout<<"V["<<a+1<<"]= ";cin>>vec[a];
}}

int vector::eliminardup(int n)
{int cont=0;
for (int a=0;a<n;a++)
     {for (int b=a+1;a<n;b++)
          {if (vec[b]==vec[a])
               {for(int c=b; c<n-1;c++)
                   {vec[c]=vec[c+1];
                   }cont++;
               }
          }
     }
return (cont);}

// ejercicio12.main
#include "stdafx.h"
#include "conio.h"
#include <iostream>
#include "vector.h"
using namespace std;
void main()
{int n,c; float vec[100];
do{ cout<<"Ingrese el tamanio del vector: "; cin>>n;}
while (n<=0);
vector v1(n);
v1.cargar(n);
c=v1.eliminardup(n);cout<<c;getch();
cout<<"Eliminando los duplicados el vector es:"<<endl;
v1.mostrar(n,c);
getch();
}
